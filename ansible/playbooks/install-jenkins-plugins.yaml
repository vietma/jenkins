---
- name: Install Jenkins plugins
  hosts: 127.0.0.1
  gather_facts: no
  connection: local
  # Variable declaration
  vars:
    work_dir: /var/lib/jenkins
  tasks:
    - name: Start Jenkins
      service:
        name: jenkins
        state: started

    - name: Jenkins skip startUp wizard
      lineinfile: dest=/etc/sysconfig/jenkins
        regexp='^JENKINS_JAVA_OPTIONS='
        line='JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
      register: result_skip_startup_wizard

    - name: Restart Jenkins after disable startUp wizard
      service:
        name: jenkins
        state: restarted

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 240
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200

    ## Install Jenkins plugins ##
    - name: Remove plugins dir
      file:
        state: absent
        path: "{{ work_dir }}/plugins"

    - name: Recreate empty plugins dir
      file:
        state: directory
        path: "{{ work_dir }}/plugins"
        owner: jenkins
        group: jenkins

    - name: Install Jenkins plugins without a specific version
      jenkins_plugin:
        name: "{{ item.key }}"
        with_dependencies: yes
      when: >
        'version' not in item.value
      with_dict: "{{ jenkins.plugins }}"
      register: result
      retries: 60
      delay: 2
      until: result is not failed

    - name: Install Jenkins plugins with a specific version
      jenkins_plugin:
        name: "{{ item.key }}"
        version: "{{ item.value['version'] }}"
        with_dependencies: yes
      when: >
        'version' in item.value
      with_dict: "{{ jenkins.plugins }}"
      register: result
      retries: 60
      delay: 2
      until: result is not failed

    - name: Restart Jenkins after plugin installation
      service:
        name: jenkins
        state: restarted

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 240
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200

    - name: Plugin enabling
      jenkins_plugin:
        name: "{{ item.value['name'] if item.value['name'] is defined else item.key }}"
        state: "{{ 'enabled' if item.value['enabled'] else 'disabled'}}"
      when: >
        'enabled' in item.value
      with_dict: "{{ jenkins.plugins }}"

    - name: Jenkins re-enable startUp wizard
      lineinfile: dest=/etc/sysconfig/jenkins
        regexp='^JENKINS_JAVA_OPTIONS='
        line='JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=true"'
      register: result_enable_startup_wizard

    - name: Restart Jenkins after plugin enabling
      service:
        name: jenkins
        state: restarted

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 240
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200
